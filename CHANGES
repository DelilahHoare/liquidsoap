1.0.0 beta2 (??-07-2011)
========================
This release introduces lots of fixes and cleanup, but also some new features.
Major novelties: support for fast seeking and cue points, FLAC and improved
  AAC+ support, introduction of the liquidsoap yellowpages "flows",
  plugin support and improved messages for scripting errors
Compatibility warning: insert_metadata has changed, and clock.assign_new()
  should be used instead of clock() to avoid some of the new static checks
========================
Decoders:
 - New support for seeking and fast computation of durations in most formats
 - New decoders: FLAC (native & Ogg) and images using Camlimages
 - Fixes in Ogg decoding: LS-515 (loss of data) and LS-537 (segfault).
 - Fix LS-337: periodical failures when decoding AAC(+) streams
 - AAC(+): use new ocaml-faad with builtin mp4ff, easier to build
 - New detection mechanism mixing extensions and MIME types (when available), 
   with corresponding settings "decoder.file_extensions.<format>" and
   "decoder.mime_types.<format>".
 - Decoder order can be user-defined thanks to new settings 
   "decoder.file_decoders", "decoder.stream_decoders" and 
   "decoder.metadata_decoders".
 - Indicate which decoder is used in the "decoder" metadata
 - More helpful log for various errors
 - Fix segfault with SdlImage image decoder
Encoders:
 - New FLAC encoders %flac (native) and %ogg(%flac)
 - New AAC+ 2.0 and vo-aacenc
 - New settings to theora: keyframes make files much smaller!
 - New settings for WAV encoding: headerless, samplesize.
 - Fix segfaults with ocaml-aacplus
 - Enhancement LS-441: filter metadata before encoding,
   based on the "encoder.metadata.export" setting.
 - Rework infrastructure of encoded outputs to fit all formats, outputs
   and styles of metadata handling, file reopening (#386)
Harbor:
 - New: output.harbor() which acts as a mini icecast server,
   accepting listeners directly. Encoding is shared among users,
   and is only performed when needed.
 - New: ability to register HTTP GET/POST handlers to create simpler
   web services, using harbor.http.register/remove().
 - Make all settings local: port, user and password can be set independently
   for each input.harbor() source
 - New: "metadata_charset" and "icy_metadata_charset" in input.harbor()
 - Fix: race condition possibly leading to abusive "source taken" (LS-500)
Icecast:
 - Add support for streaming native flac, only works when streaming to
   input.harbor(), not supported by actual Icecast servers
 - Fix bugs in ICY protocol support (header parsing, user name)
 - Use ICY metadata updates when streaming AAC(+)
 - New: "encoding" parameter for output.icecast(), used for recoding metadata
   Defaults to "latin1" with shoutcast servers
 - New: icy.update_metadata() function for manual updates
 - Enhance default "song" metadata, avoiding " - " when unnecessary (#467)
Input/output:
 - New experimental input.v4l/v4l2() for webcams
 - New experimental input/output.udp() for unchecked UDP streaming,
   available with most formats (at your own risk)
 - Restore output.pipe.external(), now called output.external()
 - New parameters for most outputs and inputs (start, on_start,
   on_stop, fallible); cleanup and uniformize implementations (LS-365)
 - New ALSA settings alsa.alsa_buffer, alsa.buffer_length and alsa.periods
   Setting periods=0 allows to not attempt to set the number periods,
   which is impossible on some devices
 - New preference order in input/output.prefered(): pulseaudio, portaudio,
   oss, alsa, ao, dummy
Operators:
 - New: support for cue points with cue_cut()
 - Change insert.metadata() which is now more script friendly,
   returning an insertion function rather than register a server
   command. The old functionality is available as server.insert_metadata().
 - New: rms() operator for getting RMS of a stream, and server.rms() which
   makes this information available as a server command.
 - New: track_sensitive mode for blank detection operators
 - New: playlist.reloadable() for playing a list once, with a command
   for restarting it.
 - Remove id.*() which can be replaced by type annotations
Scripting API:
 - New: OSC support through osc.bool(), osc.float() and osc.float_pair()
 - New: JSON export json_of()
 - New: http.get() and http.post()
 - New: url.encode/decode(), base64.encode/decode()
 - New: string.recode() for charset conversions using camomile
 - New: notify_metadata() and osd_metadata(), suitable for use with
   on_track() and on_metadata()
 - New: request.metadata() for getting a request's metadata
 - New: string.length()
 - Enhance log_clocks() with parameter for delaying startup
 - Enhance get_clock_status() with "uptime" reference time
Server interface:
 - Print the playlist's URI when calling <playlist>.uri without an
   argument.
 - Ehance <queue>.ignore now works also in the primary queue
 - New command for changing the URL of an input.http(), ref #466. The
   command is <id>.url and it needs a restart (<id>.stop, then start)
   to take effect.
 - Fixed double registration of server commands which resulted in broken
   "help" command (LS-521)
Script language:
 - Option "-i" doesn't show types for pervasives anymore
 - Pretty printing of types (LS-474) with indentation, also used
   in the documentation
 - Enhanced type errors (LS-459): no more traces, only the relevant
   part of types is displayed, plus a few special friendly messages.
 - Enhanced static checks (LS-123) thanks to the introduction of the
   active_source subtype, for unused variables and ignored values
   This should avoid common errors, help troubleshooting
   If needed, advanced users can work around errors using --check-lib
   and --errors-as-warnings
General:
 - Do not attempt to install "daemon" files if user/group have not been
   set, unless forced using "make INSTALL_DAEMON= install"
 - Fix several core "source protocol" bugs, causing assert failures and
   other crashes: LS-460 (source becomes not ready without operator knowing)
   #403 (information about being ready is not precise enough)
 - Fix incorrect image accesses (LS-430) by introducing a safer VFrame API
   Applies to most video operators (video.fade(), video.text(), effects...)
 - Cleanup resource (de)allocation, which is becoming critical with dynamic
   reconfigurations (e.g., dynamic output creation, source.dynamic())
   Enforce that server commands are always deallocated (LS-495)
   Attempt to stop sources when initialization fails, so they cleanup as
   much as possible (LS-503)
   Avoid deadlocks upon crashes in IoRing-based operators
   Share code for stoppable feeding threads, use it in input.harbor()
   Avoid useless initialization of SDL systems
 - Dynamic loading of lame and aacplus libraries, making it possible to
   ship them as separate binary packages. This is particularly useless
   for non-free libraries and for those that depend on X (e.g., SDL)
   which is often undesirable on servers
 - Support for separate compilation of most optional features as plugins
   Use --enable-<feature>-dynamic-plugin in ./configure and
   --dynamic-plugins-dir in liquidsoap
 - Better Win32 support, more version checks, separate compilation of
   C files and compliance with Debian's OCaml standards
 - Externalize many audio and video functions in the new ocaml-mm library
   Factorize and optimize various conversions
 - Rewrite harbor and server code using the new Duppy monad,
   introducing camlp4 into the build system
 - New regression tests (make test)
 - More user-friendly exception printing
 - Avoid problems preventing backtrace printing
Miscellaneous:
 - Update liguidsoap, make microphone input optional (LS-496)
 - Do not crash upon charset-recoding failures [LS-473,a7a3ad762100]
 - Fix in source.dynamic(): missing source re-selection [LS-354,eed32621494c]
 - Avoid deadlock on startup in daemon mode [LS-229,42ea194fdacd,1859ee9c68e4]
 - Fixes in LADSPA and SDL causing early freezing of Frame parameters.
 - Fullscreen mode for output.sdl()
 - Fix: SIGPIPE used to cause crashes (LS-53,LS-287)
 - Fix: video.volume() could crash upon some end-of-track situationos
 - Fix: properly escape filenames in external file duration methods
 - Rework timeout management for various sockets (notably icecast & harbor)
   Set nodelay, remove TCP_-TIMEOUT [LS-508,LS-509,26a77827f66b,663edfba92fd]

1.0.0 beta1 (06-09-2010)
========================
This beta version introduces two major new features: heterogeneous stream
types and clocks.
New:
 - Different sources can carry different types of content.
 - Encoding formats have been introduced to help infer stream content types.
   This brings static checking for bounds in encoding parameters.
 - Introduce conversions between stream contents (mono, stereo, drop
   audio, video, etc) and muxing.
 - Allow explicit type annotations in scripts.
 - Introduce clocks, cleanly allowing for the coexistence of different
   time flows, and avoiding inconsistencies that can result from it.
   Soundcard I/O and cross-based operators notably make use of it.
 - Remove root.sync, replaced by attaching a source s to clock(sync=false,s).
 - Enable dynamic source creation and source.shutdown().
 - Extend and adapt MIDI and video operators.
 - Introduce purely metadata streams (audio=video=midi=0 channels) and
   metadata stream decoder.
 - Support WAV streams in input.http/harbor().
 - Introduce static image decoder using SDL image.
 - Remove bound of request identifies (RID).
 - Experimental: source.dynamic() for advanced dangerous hacking.
 - Make path relative to script in %include "PATH", and introduce
   %include <...> where path is relative to liquidsoap library directory.
 - Add channels_matrix parameter to output.ao().
 - Add on_(dis)connect hooks in input.harbor().
Cleanup and fixes:
 - Lots of cleanup and fixes as with all major code rewriting.
 - Optimize video and stabilize it a little bit... still not perfect.
 - Rewrite stream and file decoding API, as well as file format detection.
 - Enhance shutdown and error message reporting, notably for icecast
   and request-based sources.
 - Avoid quasi-infinite loop in failed request resolving.


0.9.3 (04-09-2010)
==================
This release is a bugfix of the latest snapshot (0.9.2).
It will be the last bugfix before 1.0.
Bugs fixed:
 - Add "audio/mpegurl" to the list of mime-type for basic playlist parsing.
 - Decode arguments passed to input.harbor.
 - Use Camomile framework to try to recode arguments and user/password
   passed to input.harbor.
 - Support Theora 1.1 API  via ocaml-theora 0.2.0.
 - Fixed input.lastfm.
 - Fixed SDL output.
 - Allow magic file type detection to follow symlinks.

0.9.2 (29-10-2009)
==================
This release is a SNAPSHOT of upcoming features. It also contains several
important bugfixes. As a snapshot, it contains experimental or unpolished
features, and also breaks compatibility with previous versions.
You should in particular notice the two "New" items below:
 - random(strict=true) is now called rotate();
 - request sources (playlists, request.*) have a new queuing behavior,
   check the doc (request-sources.html) or revert to conservative=true.
==================
Bugs fixed:
 - Ogg encoder now muxes pages according to their ending time.
 - Support "ogg/audio" and "ogg/video" mime types for HTTP ogg streams.
 - Changed external encoder's "restart_encoder" to the more relevant
   "restart_on_new_track". Added optional "restart_after_delay"
   to restart the encoder after some delay. Also completely rewrite
   stop mechanism. Stop operation now waits for the encoding process
   to finish, allowing proper restart_on_new_track like for ogg encoded
   data.
 - Factorized buffered I/O code. Also added a blocking API, which avoids
   "no available frame" and "reader not ready" messages and audio glitches.
   It enforces that "root.sync" be deactivated for these sources, such that
   synchronisation is done by the source. (#203)
 - Factorized file decoding code.
 - Fixed reversed order when parsing playlists using playlist.parse().
 - Avoid bad crashes when resources lack, e.g. no more memory.
 - Tighten and enforce the inter-source protocol.
 - All outputs: fix the autostart server command. With the former code,
   a modification of the autostart parameter was only taken into account
   one start/stop cycle later.
 - on_blank(): fix a bug that prevented the first call to on_noise.
 - Fixed estimated remaining samples on ogg files, fixes issues with
   operators relying on this value, in particular crossfade() and
   request-based sources when operating in non-conservative mode.
 - Fixed socket descriptor leak in input.http. (#318)
 - Fixed deadlock at init when an exception was raised at wake_up
   phase. (#319)
 - Fix delay() which could sometimes incorrectly declare itself ready,
   and thus try to get some data from its unavailable input source.
 - Bug in queue duration estimation led to infinite feeding of the queue,
   until all request IDs are taken.
 - Several fixes enforcing clean (non-deadlocking) sleep/shutdown.
New:
 - The operator rotate() replaces random(strict=true), and random()
   does not have a strict parameter anymore.
 - Switch to new behaviour in request-based sources.
   Use conservative=true to get to the old behaviour.
 - on_blank(): provide an on_noise handler.
 - playlist*(): add server commands for reloading the playlist and changing
   its URI.
 - Fallible outputs: all outputs now have a fallible mode, in which
   they accept fallible sources, and automatically start/stop when the child
   fails to stream.
 - EXPERIMENTAL ogg/dirac encoding support.
 - output.*.aacplus(): native outputs encoding in AAC+ using ocaml-aacplus.
 - Switched to a custom implementation of the various shout protocols.
   It notably allows arbitrary content-type settings which enables
   AAC+ streaming. Enabled wrappers for external encoders for AAC+ format
   aacplusenc (#220 and #136). Also added custom IRC, AIM and ICQ headers
   to shoutcast wrappers (#192).
 - Harbor now supports Shoutcast/ICY headers properly. This allows in 
   particular the use of any supported data format for the source client.
 - Harbor sources now also consider "song" field when updating metadata.
 - Added built-in support for m4a audio files and metadata.
   Made external support optional through enable_faad.
 - Added optional resampling for output.external operators (#273).
 - Added optional host and port parameters for audioscrobbling
   submissions. Allows to use alternate systems, such as libre.fm
   of jamendo's compatibility API. Added nowplaying submission,
   and various wrappers, including a full submission process
   (now playing at beginning, submit some times before the end).
 - New variables in the script language: liquidsoap.version and
   configure.{libdir,pidfile,logdir}.
 - Added built-in support for replay_gain, through the replay_gain protocol
   (enabled by default) and the replay gain metadata resolver (to be enabled
   using enable_replaygain_metadata()). (#103 & #317)
 - Reverse DNS operations can be disabled using settings keys
   "server.telnet.reverse_dns" and "harbor.reverse_dns".
Experimental:
 - MIDI: file decoding, synthesis, virtual keyboard.
Removed:
 - RTP input and output.
 - Removed decoders using ocaml-natty. Slow, unmaintained and superseded
   by the mplayer decoder.

0.9.1 (18-06-2009)
Bugs fixed:
 - Fixed request task not ending properly for request-driven sources (playlist,
   request.queue, request.equeue). Fixes a problem reported when reloading
   an empty playlist multiple times. (#269)
 - Fixed math.h usage in rgb_c.c.
 - Fixed append operator. (#284)
 - Fixed OSS compilation for non-linux systems.
 - Disconnect idle harbor sources after timeout has expired.
   Thanks to Roman Savrulin for reporting and fixing !
 - Taglib metadata resolver is only used on files decoded
   by the MP3 decoder.
New:
 - Get a node's striping status when stripping
   blank with strip_blank (#260).
 - on_connect function for input.harbor now receives the
   list of headers given by the connected source (#266).
 - Added on_end operator, to execute a handler when a track ends.
 - Added estimated remaining time in the queue length for request-driven
   sources (request.{equeue,queue}, playlist). This allows these sources
   to prepare less files in advance. In particular, primary queue may
   only contain the file currently played. Default behaviour has been
   set to the old behaviour, and a conservative option has
   been added to switch to the new behaviour. New behavivour
   will be the default for the next release.
   fixes #169, references #146

0.9.0 (01-03-2009)
Bugs fixed:
 - Fixed byte swapping function.
 - Fixed unix server socket failure (#160).
 - Fixed mp3 audio glitches when decoding 
   files with picture id3v2 tags using ocaml-mad (#162).
 - Fixed liquidsoap crash on weird telnet and harbor input (#164).
 - Fixed request.queue() not considering initial queue on wake-up (#196).
 - Fixed source leak in append().
 - Fixed after_output propagation in the transitions of switches (#208).
 - Fixed compilation for ocaml 3.11 (#216).
 - Fixed (again) Vorbis mono output (#211).
 - Avoid crashing on broken symlinks when parsing directories (#154).
 - Use random temporary file in liGuidsoap.
 - Fixed liGuidsoap to use the (not so) new metadata field initial_uri.
 - Fix bugs in the life cycle (sleep/wake_up) of queued request sources,
   which made say_metadata unfunctional.
 - Remove buggy unbuffered {input,output}.jack. (#231)
 - Fixed audio information sent to icecast. (#226)
 - Fixed global reset starting inactive sources. (#227)
 - Fixed shoutcast source initial answer in harbor. (#254)
 - Fixed frame and metadata duplication in cross operators. (#257)
 - Fixed several sources (outputs, external streams) that were not going
   to sleep correctly.
Changes:
 - Warning: interactive_float() is now interactive.float().
New:
 - Compatible with OCaml 3.09.
 - Faster shutdown.
 - Rewrote ogg decoding, for files and streams.
 - Support for ogg skeletons, currently only used for theora.
 - Cleanup icecast class hierarchy and restart mechanism, especially
   with respect to the encoder.
 - Support for breaks and metadata in generators.
   As a result, input.http() and input.harbor() now fully support them.
   See new_track_on_metadata parameters there.
 - Switch operators (fallback,random and switch) can now replay the metadata
   of a source that has been left in the middle of a track.
 - New force_mime parameter for input.http().
 - New insert_missing parameter for append().
 - Multi-line strings in liq scripts, with a caml-like syntax.
 - Slight modification of the scripting syntax, handling unary minus.
 - Added user_agent parameter for input.http and input.lastfm
 - Added speex support for files and HTTP streams.
 - Added EXPERIMENTAL support for AU, AIFF and NSV mp3 audio files
   using ocaml-natty.
 - Added "prefix" parameter to the playlist operators. Allows to prefix
   each uri in order to force resolution through a specific protocol, 
   like replaygain: for instance. (#166)
 - Support for external processes as audio encoder:
   * Added output.icecast.lame to output to icecast using the lame binary.
   * Added output.icecast.flac to output to icecast using the flac binary.
   * Full generic support awaits some changes in libshout.
 - Support for external processes as audio stream decoder:
   * Added input.mplayer to stream data coming from mplayer.
 - Support for external processes as audio file decoder:
   * Added support for flac audio files using the flac binary.
   * Added support for m4a files using the faad binary.
   * Added optional support for mplayer, enabled with enable_mplayer().
 - Support for external metadata decoders.
 - Support for generic authentication function in harbor,
   also available for ICY (shoutcast) clients.
 - Added optional support for the samplerate library,
   and dynamic configuration of resampling routine.
 - Added lag() operator, which delays a stream by a constant time.
 - Initial support for PulseAudio.
 - Added experimental support for {input,output}.marshal, allowing
   raw communication between various liquidsoap instances.
 - Added optional alternatives to store buffered audio data:
    * raw: in memory, s16le format
    * disk: on disk, several big files
    * disk_manyfiles: on disk, a lot of small files
   See documentation for more details.
 - Added EXPERIMENTAL video support:
    * Support for ogg/theora file input.
    * Support for ogg/theora file and icecast output
    * Support for SDL output.
    * Optional support for ocaml-gavl as video converter.
    * Support for video in _some_ existing operators, including switches,
      add(), metadata/track manipulations.
    * Added operators: video.fade.*, video.fill, video.greyscale, video.image,
      video.invert, video.lomo, video.noise, video.opacity, video.opacity.blur,
      video.rotate, video.scale, video.sepia, video.text, video.tile,
      video.transparent, video.volume.

0.3.8.1 (11-08-2008)
 - Fixed metadata propagation during default transition
   in smart_crossfade
 - Changed transition evaluation order in smart_crossfade
 - Fixed transition function in smart_crossfade

0.3.8 (30-07-2008)
Bugs fixed:
 - Vorbis mono output is now working
 - Fixed parameter parameter description
   in the documentation
 - Propagate new delay in add_timeout
 - Fixed inter-thread mutex lock/unlock in playlist.ml
 - Fixed "next" playlist command
 - Fixed race conditions in request_source.ml feeding task
 - cross/smartcross: raise the default for inhibition as 
   setting it to exactly duration is not enough
 - Don't fail when $HOME is not set
 - Fixed metadata update in input.harbor with icecast2 source protocol
 - Fixed shutdown function. Fixes #153
 - Fixed input.oss. Liquidsoap now works with OSS4 ! Fixes #158
New:
 - Added a hook to execute a function when playlist.once ends
 - Enhanced smart_crossfade
 - Added string.case and string.capitalize
 - New "exec_at" operator, to execute a function depending on a given predicate
 - Added script example in the documentation to listen to radio Nova and get 
   the metadata from a web page.
 - Changed parameters name in fallback.skip to reflect who are the fallback
   and input source.
 - Added a dump file parameter to input.harbor, for debugging purpose.
 - Added an auth function parameter to input.harbor for custom 
   authentifications. Fixes #157
 - Added "primary_queue" and "secondary_queue" commands to request.queue and
   request.equeue sources. Also set the metadata "queue" to either "primary"
   or "secondary" for each request in the queue. Documented it too.
 - Insert latest metadata for a node of a switch source when switching 
   back to it in a middle of a track.
 - Added a 'conservative' parameter to cross, smilar to the one in smartcross.
Internal:
 - Enhanced liqi documentation parser to build the website.

0.3.7 (03-06-2008)
Bugs fixed:
 - Now works on FreeBSD and hopefully other unices that are stricter than
   Linux about Mutex usage.
 - input.http() now has a bind_address parameter.
 - Harbor socket now has a timeout for lost connections.
 - smartcross() is now more compliant with the inter-sources protocol,
   fixes several "get frame didn't change the buffer" bugs.
 - Ogg packeting bugs.
 - Buffering policy in input.http/harbor().
 - No "." in IDs and labels.
 - Resources: FD leaks, useless threads (threads leaks?) in input.http().
 - fade.out() used to run into infinite loops when the delay was 0.
New:
 - New documentation system and website.
 - Self-documenting server with a more helpful "help" command.
 - Moved to duppy: less threads, lighter load, and an configurable scheduler.
 - Moved to Taglib for more reliable access to MP3 metadata.
 - MIME types, notably for playlists and MP3 files.
 - New Jack support. The old one has been renamed to in/output.jack.legacy().
 - Harbor: per-mount passwords and the stop command to kick a source client.
 - Official Last.FM client.
 - Metadata is no more punctual but interval-based, which suppresses some 
   surprising behaviours.
 - Perfected daemon behaviour.
 - All output.file.*() now have the features that used to be only in 
   output.file.vorbis(), notable re-opening. Added %w to the strftime-like 
   format codes allowed in their filename parameter.
 - Add clear_metadata() and map_metadata(). Now, rewrite_metadata() is a simple
   specialization of map_metadata(), written in utils.liq.
 - Dynamic amplification factor in amplify(), e.g. useful for replay gain.
 - Lots of new functions in the scripting API: for lists, requests, system 
   interaction, shutdown, command-line parsing, scripted server commands, etc.
As always:
 - code cleanup, style, etc.

0.3.6 (17-12-2007)
Bugfix release:
 - Close Http socket
 - Add http socket timeout
 - Close playlist file after reading its content
 - Fix http redirect support for lastfm files
 - Fix file open leak in camomile support
 - Fix playlist uri ending with "/"

0.3.5 (08-11-2007)
Bugfix release:
  - Fixed #57: scpls and mpegurl playlist parsing
  - Fixed #46: Late cross-scripts bindings

0.3.4 (25-09-2007)
Notation: "-" stands for a change, "+" for an addition.
* Language
  - Support for polymorphism, subtyping and basic ad-hoc polymorphism,
    which allows a much simpler API, notably for maths and serialization.
  + Added interactive_*() for mutable values.
  - The right syntax for settings is now set("var", value) and can be used
    anywhere in the scripts.
  - The volume parameters of most operators are now in dB.
  - Many builtin functions added.
  - Nicer type error messages.
* Sources
  + Added input.lastfm() to relay last.fm streams.
  + Added input.harbor() to received Icecast2 source streams.
  + Added noise() to generate white noise
  - Reimplemented playlist support, added various xml and text formats.
  - Added mpd protocol to find files using mpd.
* Operators
  + New effects: compress(), flanger(), pan().
  + New filters: filter.fir.*(), filter.iir.*(), filter.biquad.*(), comb().
  + Added support for LADSPA effects.
  + Added eat_blank() to remove blanks.
* Outputs
  - Added non-default restart option for output.icecast.*().
  - Added the possibility to tweak some settings at runtime.
  - Split output.icecast.vorbis() into output.icecast.vorbis.*() to distinguish
    between encoding modes -- and similarly for output.file.vorbis and mp3.
  - Better handling of Icecast disconnections.
* IO
  + Added portaudio support.
  - Jack support is now somewhat working.
* As usual, lots of bug fixes, careful polishing & much more...

0.3.3 (06-06-2007)
* Major cleanup of the core stream representation; moved to float arrays,
  removing several back-and-forth conversions and enhancing the perfs a lot;
  reviewed all sources and operators, made many minor enhancements btw.
* Lots of sound processing operators: compand, compress, normalize,
  pitch, bpm, soundtouch, saw, square, etc. Add more shapes to fade.*().
* New track processing operators: insert_metadata, on_track.
* Smart cross: allows to select a transition based on the volumes around the 
  end-of-track.
* Support for AAC encoding/decoding.
* Several fixes to output.icecast.mp3 in order to support shoutcast servers.
* Automatic format recognition for input.http(), support for playlists.
* OSS I/O.
* Unbuffered ALSA I/O for low latency.
* Server interface via UNIX domain sockets.
* Better output.file.vorbis with support for re-opening the file, appending,
  interpolate strftime format codes, etc.
* Add pre-processing and math primitives to the language, new _[_] notation for 
  assoc(), ruby-style anti-quotation ("..#{..}.."), add_timeout(), execute(),
  log()...
* Ability to tweak the internal PCM stream format.
* Classify sources and operators in categories for more structured doc.
* Started a few visualization operators, text and graphics based.
* Several bug fixes: request leaks, sine frequency, switch, etc.

0.3.2 (16-03-2007)
* New portable output to speakers using libao().
* Updated liGuidsoap to use it until ALSA gets enhanced.
* Implemented a decent estimation of the remaining time in a track.
* Added the cross() operator allowing cross-fading.
* Generalized say_metadata() into append() and prepend().
* Per-track settings for cross(), fade.*(), prepend() and append()
  using requests' metadatas.
* Implemented input.http.mp3(), including support for icy metadata.
* New pipe() operator which allows one to filter the raw audio through an 
  external program. However, sox and other common tools aren't suitable for that
  because they don't flush their output often enough.
* New on_blank() operator for calling a callback on excessive blanks.
* Restart outputs on insane latencies.
* Type checkings for settings.
* Setting for not starting the internal telnet server.
* Now handles old and new versions of Camomile correctly.
* Internal fixes and polishing (switches' cached selection, empty tracks..)

0.3.1 (17-11-2006)
* More standards-compliant tarball
* Generate doc with locally built liquidsoap
* Try to cope with ill-formed mp3
* Updated for newer versions of Camomile
* So-called "strict" random-mode

0.3.0 (27-08-2006)
* Many minor and major fixes at every level!
* Conversion of metadata to UTF8.
* Got rid of too many threads by scheduling all download tasks
  in a single thread, and handling all of the server's clients
  in another single thread.
* Simplified the time interval syntax and integrated it to the script language.
* New protocol: Wget for FTP, HTTP and HTTPS.
* Ability to define a new protocol from the script,
  typically using an external app/script for resolution, such as bubble.
* Ability to use an external app/script for dynamically creating requests.
* New on_metadata operator for performing arbitrary actions (typically
  a call to an external script) when metadata packets occur in a stream.
* MP3 encoding, to file or shout.
* API renamings and simplification.
* Supports transition, as functions of type (source,source) -> source
  in all switching operators: schedule, random, fallback.
* Restart icecast2 outputs on failures.
* Major changes to the scripting language which is more uniform and flexible,
  has functions, a helpful (?) type inference, and a simple Ruby-like syntax.
* Timing constraints and synchronization are managed by Root
  in a centralized way, no more by the many outputs which need it.
* Audio decoding is no more based on file extensions,
  but on the existence of a valid decoder.
* Added the equeue operators which allows interactive building of playlists,
  supporting insertion and moving of queued requests -- queue only allows
  you to push requests and cancel queued requests.
* A Python-Gtk GUI for controlling operators, or more specifically as a console
  for creating your live show -- to be updated, still unstable.
* Alsa input and output.
* Blank detection, automatically skips on too long blanks, or strip them.
* Http ogg/vorbis relay, the way to relay live shows.
* Interactive mixer.
* The request system was mostly rewritten to really fulfill its specification.
* The server is no more associated to the queue operator but is now something
  external, in which all operators can plug commands. This much more logical
  design lead to many more interactive controls. The syntax of command outputs
  was also simplified for easier automated processing.
* Dynamic loading of plugins.
* Outputs are now operators. It makes it possible to output different streams
  in a single instance of Liquidsoap, which RadioPi needed. As a consequence
  we removed the restriction that one source must have at most one father,
  without any extra burden for the user.

0.2.0 (20-04-2005)
* Proper initial release.

0.1.0 (2004)
* Release for academic demonstration, not functionnal.
